@import '_breakpoints';
@import '_mixins';
@import '_helper';
@import '_typography';

:root {
    // Colors
    --carp-color: #ffeb3b;
    --blue-color: #01579b;
    --brown-color: #a1887f;
    --city_lights: #0a0d24;
    --library-color: #348d85;

    --text-color--dark: #000;
    --text-color--light: #fff;
    --text-color--body: #7b8a91;
    --base-color: rgb(203, 205, 206);
    // Layout
    --gutter-size: 10px;
    --img-size: 70px;
    --header-height: 90px;
}

*  {
    box-sizing: border-box
}

body {
    @include max-mobile--l {
        margin: 0;
    }

    color: var(--text-color--body);
    font-family: 'Roboto', sans-serif;
    margin: calc(var(--gutter-size) * 2) auto;
    max-width: 760px;
}

main {
    @include max-mobile--l {
        flex-direction: column;
        height: 90vh;
    }

    display: flex;
    height: 65vh;
    border: 1px solid #{var(--base-color)};
}

article {
    background-color: #ECEFF1;
    overflow: auto;
    padding: var(--gutter-size);
    scroll-behavior: smooth;
    will-change: transform;
}

section {
    background-color: #fff;
    margin-bottom: calc(var(--gutter-size) * 2);
    padding: var(--gutter-size);
    position: relative;
    text-align: justify;
}
aside {
    &.content {
        @include max-mobile--l {
            padding: var(--gutter-size);
            text-align: center;
        }

        min-width: 220px;
        padding: calc(var(--gutter-size) * 2);

        ul {
            @include max-mobile--l {
                flex-direction: row;
            }

            display: flex;
            flex-direction: column;
            list-style: none;
            padding: 0;

            li {
                @include max-mobile--l {
                    flex-grow: 1;
                    text-align: center;
                }

                &.active-section {
                    font-weight: bold;
                }
            }
        }
    }

    margin-bottom: var(--gutter-size);
}

img {
    margin-right: var(--gutter-size);
    width: var(--img-size);
}

.sticky {
    @include standard-curve(box-shadow, .3s);

    &.shadow {
        @include shadow();

        img {
            @include shadow();
            width: var(--img-size);
        }
    }

    img {
        @include standard-curve(box-shadow, .3s);
        @include standard-curve(width, .3s);
        border: 1px solid rgba(white, 0.3);
    }

    align-items: center;
    display: flex;
    height: var(--header-height);
    padding: var(--gutter-size);
    position: sticky;
    top: 10px;
}

.sticky_sentinel {
    background: yellow;
    position: absolute;
    left: 0;
    right: 0; /* needs dimensions */
    visibility: hidden;
}

.sticky_sentinel--top {
    /* Adjust the height and top values based on your on your sticky top position.
    e.g. make the height bigger and adjust the top so observeHeaders()'s
    IntersectionObserver fires as soon as the bottom of the sentinel crosses the
    top of the intersection container. */
    height: 40px;
    top: -24px;
}

.sticky_sentinel--bottom {
    bottom: 0;
    /* Height should match the top of the header when it's at the bottom of the
    intersection container. */
    height: calc(var(--header-height) + var(--gutter-size));
}
